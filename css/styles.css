
:root{ --blanco:#ffffff;
    --oscuro:#212121;
    --primario:#ffc107;
    --secundario:#0097a7;
    --gris: #757575;

        --fuente--principal:3.8rem;

}

/* globales**/

html{ font-size: 62.5%;
box-sizing: border-box;  
scroll-snap-type: y mandatory;  /* para que scrrollee*/
}


*, *:before, *:after {
    box-sizing: inherit;
  }


body {font-size: 16px;
    font-family: 'Krub', sans-serif;
    background-image: linear-gradient(to bottom, var(--gris) 1  0%,var(--blanco) 70%);

}

.sombra { -webkit-box-shadow: 5px 2px 0px 7px rgba(0,0,0,0.75);
    -moz-box-shadow: 5px 2px 0px 7px rgba(0,0,0,0.75);
    box-shadow: 5px 2px 0px 7px rgba(0,0,0,0.75);
    background-color: var(--blanco);
    padding: 2rem;    
    border-radius: 1rem ;
}

/* titulos h**/

h1{ font-size: 3.8rem;


}



h2{ font-size: 2.8rem;

}


h3{font-size: 1.8rem;

}

h1,h2,h3{ 
    text-align: center;
}


/**titulo principal**/

.titulo span {font-size: 2rem;
            color:var(--oscuro)

;}

/** caja de main contenedora**/
.contenedor{
max-width: 120rem;
margin: 0 auto 0 auto;

}


/*navegador principal;**/
.nav-bg { 
background-color: var(--secundario);

}




.navegador--principal{
padding: 1rem;
display: flex;
flex-direction: column;
justify-content: space-between;

} 

@media (min-width: 768px) {.navegador--principal{
flex-direction: row;}

}

.navegador--principal a{
    display: block;
    text-align: center;
 color: var(--blanco);
 text-decoration: none;
font-size: 2rem;
font-weight: 700;
}

.navegador--principal a:hover{
background-color: rgb(166, 255, 0);
color: #212121;
font-size: 2.2rem;
}


/*hero**/
.hero{
background-image: url(../img/hero.jpg);
background-repeat: no-repeat;
background-size: cover;
height: 410px;
position: relative;
margin-bottom: 2rem;
}

.contenido-hero {
    position: absolute; 
    background-color: rgb(0 0 0 / 50%);
width: 100%;
height: 100%;
display: flex;
flex-direction: column;
align-items: center;
justify-content: center;
}


.contenido-hero h2, .contenido-hero p{
    color: var(--blanco);
}

.ubicacion {
    display: flex;
    align-items: center;
}

.boton{ 
background-color: var(--secundario);
color: var(--blanco);
font-size: 2rem;
padding: 1rem 3rem;
margin-top: 1rem;
text-decoration: none;
text-transform: uppercase;
font-weight: bold;
border-radius: 0.8rem;
width: 80%; 
text-align: center;
border: none;
}

/* utilidades*/

.w-sm-100{
    width: 100%;
    text-align: center;
    margin: auto;
}


@media (min-width: 768px) {
    .w-sm-100{ width: auto;
} }

.flex {
    display: flex;
    
}

.alinear-derecha {
    justify-content: flex-end;

}


.servicios, .navegador--principal , .formulario {

    scroll-snap-align: center;
    scroll-snap-type: always;
}

/* para el boton del formulario */

@media (min-width: 768px) {.boton, .servicios{width: auto; 
   display: grid;
   grid: repeat (3, 1fr);
}

}

.boton:hover {
    cursor: pointer;
}


/** servicio es la cajaja de section**/
.servicio { 
    display: flex;
    flex-direction: column;
    align-items: center;
}

.servicio h3 {
    color: var(--secundario);
    text-align: center;

}


/** div iconos**/
.servicio .iconos {
 height: 15rem;
 width: 15rem;
 background-color: var(--primario) ;
 border-radius: 50%;
 display: flex;
 justify-content: space-evenly;
 align-items: center;   
 
}

.servicio p { 
    line-height: 2;
    text-align: center;

}


/** div servicios, padre de section servicio**/
.servicios {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
}


/**contacto formulario**/

.formulario {
    background-color: var(--gris);
width: min(60rem, 100%); /**utilizar el valor mas chiquito de entro los dos que ingreso**/
margin: 0 auto; /** para centrar elementos BLOCK sin tener que ponerle display flex al elemento padre o mejor dicho cuando no lo tienen**/
justify-content: center;

border-radius: 2rem;
padding: 2rem;

}


.formulario fieldset {
    border: none;
}


.formulario legend {

    font-weight: 700;
   text-transform: uppercase;
   font-size: 2rem;
   text-align: center;
   margin-bottom: 2rem;
    color: var(--primario);

}

/* recordar el disenio responvise, para que quede vien en todos
los formatos*/

@media (min-width:768px) {.contenedor-campos {
    display: grid;
    grid-template-columns: repeat(2,1fr);
    grid-template-rows: auto auto 20rem;
    /* para la separacion de las columnas*/
    column-gap: 2rem;

}
.campo:nth-child(3), .campo:nth-child(4){
 grid-column: 1/3;   

}

}


.campo {
    margin-bottom: 1rem;
}

.campo textarea {
    height: 15rem;
}

.campo label{
    color: var(--blanco);
    margin-bottom: 0.5rem;
    font-weight: bold;
    display: block;
}

 /**.campo input [type="text"] esto si quiero elegir dentro de la clase
a los tipo de text, es usar un selector */


.input-text {
border: none;
width: 100%;
padding: 1.5rem;
border-radius: 0.5rem;

}

/** estoy usando una clase enviar y que mantenga la clase
.enviar .boton {
    width: 100%;

}

es para que mantenga el width del 100% por que no toma todo 
el ancho de la caja por .boton*/    

.footer {
    text-align: center;
    font-size: 10rem;
    text-transform: uppercase;
    font-weight: 600;

}